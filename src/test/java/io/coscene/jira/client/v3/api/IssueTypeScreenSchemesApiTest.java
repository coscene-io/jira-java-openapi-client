/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.coscene.jira.client.v3.api;

import io.coscene.jira.client.v3.ApiException;
import io.coscene.jira.client.v3.model.IssueTypeIds;
import io.coscene.jira.client.v3.model.IssueTypeScreenSchemeDetails;
import io.coscene.jira.client.v3.model.IssueTypeScreenSchemeId;
import io.coscene.jira.client.v3.model.IssueTypeScreenSchemeMappingDetails;
import io.coscene.jira.client.v3.model.IssueTypeScreenSchemeProjectAssociation;
import io.coscene.jira.client.v3.model.IssueTypeScreenSchemeUpdateDetails;
import io.coscene.jira.client.v3.model.PageBeanIssueTypeScreenScheme;
import io.coscene.jira.client.v3.model.PageBeanIssueTypeScreenSchemeItem;
import io.coscene.jira.client.v3.model.PageBeanIssueTypeScreenSchemesProjects;
import io.coscene.jira.client.v3.model.PageBeanProjectDetails;
import java.util.Set;
import io.coscene.jira.client.v3.model.UpdateDefaultScreenScheme;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * API tests for IssueTypeScreenSchemesApi
 */
@Disabled
public class IssueTypeScreenSchemesApiTest {

    private final IssueTypeScreenSchemesApi api = new IssueTypeScreenSchemesApi();

    /**
     * Append mappings to issue type screen scheme
     *
     * Appends issue type to screen scheme mappings to an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appendMappingsForIssueTypeScreenSchemeTest() throws ApiException {
        String issueTypeScreenSchemeId = null;
        IssueTypeScreenSchemeMappingDetails issueTypeScreenSchemeMappingDetails = null;
        Object response = api.appendMappingsForIssueTypeScreenScheme(issueTypeScreenSchemeId, issueTypeScreenSchemeMappingDetails);
        // TODO: test validations
    }

    /**
     * Assign issue type screen scheme to project
     *
     * Assigns an issue type screen scheme to a project.  Issue type screen schemes can only be assigned to classic projects.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignIssueTypeScreenSchemeToProjectTest() throws ApiException {
        IssueTypeScreenSchemeProjectAssociation issueTypeScreenSchemeProjectAssociation = null;
        Object response = api.assignIssueTypeScreenSchemeToProject(issueTypeScreenSchemeProjectAssociation);
        // TODO: test validations
    }

    /**
     * Create issue type screen scheme
     *
     * Creates an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIssueTypeScreenSchemeTest() throws ApiException {
        IssueTypeScreenSchemeDetails issueTypeScreenSchemeDetails = null;
        IssueTypeScreenSchemeId response = api.createIssueTypeScreenScheme(issueTypeScreenSchemeDetails);
        // TODO: test validations
    }

    /**
     * Delete issue type screen scheme
     *
     * Deletes an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIssueTypeScreenSchemeTest() throws ApiException {
        String issueTypeScreenSchemeId = null;
        Object response = api.deleteIssueTypeScreenScheme(issueTypeScreenSchemeId);
        // TODO: test validations
    }

    /**
     * Get issue type screen scheme items
     *
     * Returns a [paginated](#pagination) list of issue type screen scheme items.  Only issue type screen schemes used in classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssueTypeScreenSchemeMappingsTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> issueTypeScreenSchemeId = null;
        PageBeanIssueTypeScreenSchemeItem response = api.getIssueTypeScreenSchemeMappings(startAt, maxResults, issueTypeScreenSchemeId);
        // TODO: test validations
    }

    /**
     * Get issue type screen schemes for projects
     *
     * Returns a [paginated](#pagination) list of issue type screen schemes and, for each issue type screen scheme, a list of the projects that use it.  Only issue type screen schemes used in classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssueTypeScreenSchemeProjectAssociationsTest() throws ApiException {
        Set<Long> projectId = null;
        Long startAt = null;
        Integer maxResults = null;
        PageBeanIssueTypeScreenSchemesProjects response = api.getIssueTypeScreenSchemeProjectAssociations(projectId, startAt, maxResults);
        // TODO: test validations
    }

    /**
     * Get issue type screen schemes
     *
     * Returns a [paginated](#pagination) list of issue type screen schemes.  Only issue type screen schemes used in classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssueTypeScreenSchemesTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> id = null;
        String queryString = null;
        String orderBy = null;
        String expand = null;
        PageBeanIssueTypeScreenScheme response = api.getIssueTypeScreenSchemes(startAt, maxResults, id, queryString, orderBy, expand);
        // TODO: test validations
    }

    /**
     * Get issue type screen scheme projects
     *
     * Returns a [paginated](#pagination) list of projects associated with an issue type screen scheme.  Only company-managed projects associated with an issue type screen scheme are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectsForIssueTypeScreenSchemeTest() throws ApiException {
        Long issueTypeScreenSchemeId = null;
        Long startAt = null;
        Integer maxResults = null;
        String query = null;
        PageBeanProjectDetails response = api.getProjectsForIssueTypeScreenScheme(issueTypeScreenSchemeId, startAt, maxResults, query);
        // TODO: test validations
    }

    /**
     * Remove mappings from issue type screen scheme
     *
     * Removes issue type to screen scheme mappings from an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeMappingsFromIssueTypeScreenSchemeTest() throws ApiException {
        String issueTypeScreenSchemeId = null;
        IssueTypeIds issueTypeIds = null;
        Object response = api.removeMappingsFromIssueTypeScreenScheme(issueTypeScreenSchemeId, issueTypeIds);
        // TODO: test validations
    }

    /**
     * Update issue type screen scheme default screen scheme
     *
     * Updates the default screen scheme of an issue type screen scheme. The default screen scheme is used for all unmapped issue types.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDefaultScreenSchemeTest() throws ApiException {
        String issueTypeScreenSchemeId = null;
        UpdateDefaultScreenScheme updateDefaultScreenScheme = null;
        Object response = api.updateDefaultScreenScheme(issueTypeScreenSchemeId, updateDefaultScreenScheme);
        // TODO: test validations
    }

    /**
     * Update issue type screen scheme
     *
     * Updates an issue type screen scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateIssueTypeScreenSchemeTest() throws ApiException {
        String issueTypeScreenSchemeId = null;
        IssueTypeScreenSchemeUpdateDetails issueTypeScreenSchemeUpdateDetails = null;
        Object response = api.updateIssueTypeScreenScheme(issueTypeScreenSchemeId, issueTypeScreenSchemeUpdateDetails);
        // TODO: test validations
    }

}
